using System.Collections.Generic;
using System.Linq;
using System.Xml.Linq;
using Avalonia.NameGenerator.VisualBasic.Domain;
using XamlX.TypeSystem;

namespace Avalonia.NameGenerator.VisualBasic.Generator;

internal class OnlyPropertiesCodeGenerator : ICodeGenerator
{
    public string GenerateCode(string className, string nameSpace, IXamlType xamlType, IEnumerable<ResolvedName> names)
    {
        var usingNameSpace = nameSpace.Contains(".");
        var indent = (usingNameSpace) ? "    " : "";

        var namedControls = names
            .Select(info => $@"{indent}        {info.FieldModifier} ReadOnly Property {info.Name} As {info.TypeName}

{indent}            Get
{indent}                Return FindNameScope()?.Find(Of {info.TypeName})(""{info.Name}"")
{indent}            End Get

{indent}        End Property
")
            .ToList();
        var lines = string.Join("\n", namedControls);

        if (usingNameSpace)
        {
            var vbNameSpace = string.Join(".", nameSpace.Split('.').Skip(1));
            return $@"' <auto-generated />

Imports Avalonia
Imports Avalonia.Controls
Imports Avalonia.Markup.Xaml

Namespace {vbNameSpace}

    Partial Class {className}
    
{lines}
    
    End Class

End Namespace
";
        }
        else
        {
            return $@"' <auto-generated />

Imports Avalonia
Imports Avalonia.Controls
Imports Avalonia.Markup.Xaml

Partial Class {className}
    
{lines}
    
End Class
";
        }
    }
}